---
title: "Wykorzystanie pakietu nonprobsvy (2023.12.08)"
author: "Maciej Beręsewicz & Łukasz Chrostowski"
format: 
  html:
    self-contained: true
    table-of-contents: true
    df-print: kable
---

# Informacje

Szkolenie sfinansowane w ramach projektu "Statystyka cudzoziemców bez spisu powszechnego - jakość, integracja danych i estymacja" (opis) finansowanego z grantu Narodowego Centrum Nauki OPUS 20 (2020/39/B/HS4/00941).

# Instalacje i pakiety

Instalujemy pakiet `remotes`.

```{r install, eval=FALSE}
install.packages("remotes") ## do instalacji pakietu nonprobsvy
install.packages("ggplot2") ## do wizualiacji 
install.packages("survey") ## do estymacji na podstawie prób losowych
remotes::install_github("ncn-foreigners/nonprobsvy")
```
Ładujemy pakiet `nonprobsvy`.

```{r pakiety, message = FALSE}
library(nonprobsvy) ## do prób nielosowych
library(survey) ## do badania popyt na pracę
library(ggplot2) ## do wizualizacji
```

# Dane na szkolenie

Zbiory danych znajdują się w folderze `data-raw/`:

+ plik `popyt.csv` -- zawiera zanonimizowane dane o podmiotach posiadających przynajmniej jedno wolne miejsce pracy z badania [Popyt na pracę](https://stat.gov.pl/obszary-tematyczne/rynek-pracy/popyt-na-prace/) (PnP) pozyskane przez Instytut Informatyki i Gospodarki Ilościowej UEP.
+ plik `cbop.csv` -- zawiera zanonimizowane dane podmiotów, będących w populacji badania PnP, z [Centralnej Bazy Ofert Pracy](https://oferty.praca.gov.pl/portal/index.cbop#/listaOfert) pobrane przez CBOP API.

Zbiory danych zawierają następujące kolumny:

+ `id_jednostki` -- unikalny identyfikator jednostki,
+ `sektor` - 0=publiczny, 1=prywatny,
+ `pkd` - sekcje pkd (od C do S; sekcje połączone: D i E, K i L, R i S),
+ `woj` - województwo
+ `waga` (tylko `popyt`) -- waga finalna ustalona w ramach badania PnP,
+ `jedna_zmiana` (tylko `cbop`) -- czy podmiot zatrudnia osoby na jedną zmianę (na podstawie zmiennej `kodZmianowości`, więcej na [CBOP dla integratorów](https://oferty.praca.gov.pl/portal/index.cbop#/dlaInt)).

Wczytujemy dane

```{r wczytanie}
popyt <- read.csv("../data-raw/popyt.csv",
                  colClasses = c("character", "numeric", rep("character", 3), "numeric"))
head(popyt)
```
Deklarujemy obiekt `svydesign`. Dla uproszczenie zakłdamy, że warstwy określone są przez 3 zmienne: `klasa`, `pkd` i `woj`. W praktyce schemat losowania jest troszkę inny (por. [Zeszyt metodologiczny badania PnP](https://stat.gov.pl/obszary-tematyczne/rynek-pracy/popyt-na-prace/zeszyt-metodologiczny-popyt-na-prace,3,1.html)).

```{r schemat}
popyt_svy <- svydesign(ids = ~1,  ## losujemy jednostki, a nie zespoły
                       weights = ~waga,  ## waga finalna
                       strata = ~ klasa + pkd + woj,  ## warstwy
                       data = popyt) ## dane

svytotal(~klasa, popyt_svy)
```

```{r wczytanie2}
cbop <- read.csv("../data-raw/cbop.csv", 
                 colClasses = c("character", "numeric", rep("character", 3), "logical")
                 )
head(cbop)
```
Odsetek podmiotów zatrudniających na jedną zmianę na podstawie danych CBOP bez korekty wynosi: `r round(mean(cbop$jedna_zmiana)*100,2)`.

# Estymator IPW

## Standardowy estymator

```{r ipw-stadnard}
est1_logit <- nonprob(
  selection = ~ woj + sektor + pkd + klasa,
  target = ~ jedna_zmiana,
  svydesign = popyt_svy,
  data = cbop,
  method_selection = "logit"
)

est1_probit <- nonprob(
  selection = ~ woj + sektor + pkd + klasa,
  target = ~ jedna_zmiana,
  svydesign = popyt_svy,
  data = cbop,
  method_selection = "probit"
)

est1_cloglog <- nonprob(
  selection = ~ woj + sektor + pkd + klasa,
  target = ~ jedna_zmiana,
  svydesign = popyt_svy,
  data = cbop,
  method_selection = "cloglog"
)

est_ipw_standard <- rbind(cbind(est1_logit$output, est1_logit$confidence_interval),
                          cbind(est1_probit$output, est1_probit$confidence_interval),
                          cbind(est1_cloglog$output, est1_cloglog$confidence_interval))
est_ipw_standard$est <- "ipw"
rownames(est_ipw_standard) <- NULL
est_ipw_standard
```

Strukura obiektu

```{r ipw-struktura}
str(est1_logit,1)
```
Informacje o modelu regresji logistycznej będącym podstawą estymatora IPW.

```{r ipw-struktura-sel}
str(est1_logit$selection,1)
```

Metoda summary

```{r ipw-summary}
summary(est1_logit)
```

## Estymator kalibrowany

```{r ipw-cal}
est2_logit <- nonprob(
  selection = ~ woj + sektor + pkd + klasa,
  target = ~ jedna_zmiana,
  svydesign = popyt_svy,
  data = cbop,
  method_selection = "logit",
  control_selection = controlSel(h = 1, est_method_sel = "gee")
)

est2_probit <- nonprob(
  selection = ~ woj + sektor + pkd + klasa,
  target = ~ jedna_zmiana,
  svydesign = popyt_svy,
  data = cbop,
  method_selection = "probit",
  control_selection = controlSel(h = 1, est_method_sel = "gee")
)

est2_cloglog <- nonprob(
  selection = ~ woj + sektor + pkd + klasa,
  target = ~ jedna_zmiana,
  svydesign = popyt_svy,
  data = cbop,
  method_selection = "cloglog",
  control_selection = controlSel(h = 1, est_method_sel = "gee")
)

est_ipw_calib <- rbind(cbind(est2_logit$output, est2_logit$confidence_interval),
                          cbind(est2_probit$output, est2_probit$confidence_interval),
                          cbind(est2_cloglog$output, est2_cloglog$confidence_interval))
est_ipw_calib$est <- "ipw calib"
rownames(est_ipw_calib) <- NULL
est_ipw_calib
```

Porównanie wartości globalnych pierwszego i drugiego IPW (dla logit)

```{r ipw-cal-wagi}
cbop$ipw1_waga <- est1_logit$weights
cbop$ipw2_waga <- est2_logit$weights
```

Liczba podmiotów:

```{r ipw-cal-totale}
c(popyt=sum(weights(popyt_svy)), ipw1=sum(cbop$ipw1_waga), ipw2=sum(cbop$ipw2_waga))
```

Wagi według wielkości podmiotu

```{r ipw-cal-klasa1}
svytotal(~klasa, popyt_svy)
```
```{r ipw-cal-klasa2}
xtabs(ipw1_waga ~ klasa, cbop)
xtabs(ipw2_waga ~ klasa, cbop)
```

## Estymacja wariancji metodą bootstrap

```{r ipw-bootstrap}
set.seed(2023-12-8)
est3_logit <- nonprob(
  selection = ~ woj + sektor + pkd + klasa,
  target = ~ jedna_zmiana,
  svydesign = popyt_svy,
  data = cbop,
  method_selection = "logit",
  control_inference = controlInf(var_method = "bootstrap", num_boot = 50),
  verbose = T, 
)
```
```{r ipw-bootstrap-summary}
summary(est3_logit)
```

## Dobór zmiennych do modelu

Dobór zmiennych z wykorzystaniem metody SCAD.

```{r ipw-scad}
set.seed(2023-12-8)
est4_logit <- nonprob(
  selection = ~ woj + sektor + pkd + klasa,
  target = ~ jedna_zmiana,
  svydesign = popyt_svy,
  data = cbop,
  method_selection = "logit",
  control_selection = controlSel(nfolds = 5, nlambda = 10),
  control_inference = controlInf(vars_selection = TRUE),
  verbose = TRUE
)
```

```{r ipw-scad-summary}
summary(est4_logit)
```

Porównanie estymatorów dla logit

```{r ipw-porowanie}
ipw_summary <- rbind(cbind(est1_logit$output, est1_logit$confidence_interval),
                     cbind(est2_logit$output, est2_logit$confidence_interval),
                     cbind(est3_logit$output, est3_logit$confidence_interval),
                     cbind(est4_logit$output, est4_logit$confidence_interval))
rownames(ipw_summary) <- NULL
ipw_summary$est <- c("ipw (st)", "ipw (cal)", "ipw (boot)", "ipw (scad)")
ipw_summary
```


# Estymator MI

## Estymatory MI

Estymator MI na podstawie liniowego modelu prawdopodobieństwa

```{r mi-glm-lp}
est5_glm <- nonprob(
  outcome = jedna_zmiana ~ woj + sektor + pkd + klasa,
  data = cbop,
  svydesign = popyt_svy,
  method_outcome = "glm",
  family_outcome = "gaussian"
)

cbind(est5_glm$output,est5_glm$confidence_interval)
```

Estymator MI na podstawie modelu regresji logistycznej

```{r mi-glm-binom}
est5_glm_biom <- nonprob(
  outcome = jedna_zmiana ~ woj + sektor + pkd + klasa,
  data = cbop,
  svydesign = popyt_svy,
  method_outcome = "glm",
  family_outcome = "binomial"
)
cbind(est5_glm_biom$output,est5_glm_biom$confidence_interval)
```
```{r mi-glm-binom-summary}
summary(est5_glm_biom)
```

Struktura obiektu

```{r mi-glm-binom-struktura}
str(est5_glm_biom$outcome,1)
```

Estymator MI na podstawie metody najbliższego sąsiada

```{r mi-glm-nn}
est6_glm_nn <- nonprob(
  outcome = jedna_zmiana ~ woj + sektor + pkd + klasa,
  data = cbop,
  svydesign = popyt_svy,
  method_outcome = "nn",
  control_outcome = controlOut(k=5)
)
cbind(est6_glm_nn$output,est6_glm_nn$confidence_interval)
```

Estymator MI na podstawie metody predictive mean matching (aktualnie: wariancja tylko na podstawie bootstrapu)

```{r mi-glm-pmm}
set.seed(2023-12-8)
est6_glm_pmm <- nonprob(
  outcome = jedna_zmiana ~ woj + sektor + pkd + klasa,
  data = cbop,
  svydesign = popyt_svy,
  method_outcome = "pmm",
  control_outcome = controlOut(k=5),
  control_inference = controlInf(var_method = "bootstrap", num_boot = 50),
  verbose = TRUE
)
cbind(est6_glm_pmm$output, est6_glm_pmm$confidence_interval)
```
## Dobór zmiennych

```{r mi-glm-scad}
set.seed(2023-12-8)
est7_glm_sel <- nonprob(
  outcome = jedna_zmiana ~ woj + sektor + pkd + klasa,
  data = cbop,
  svydesign = popyt_svy,
  method_outcome = "glm",
  family_outcome = "binomial",
  control_outcome = controlOut(nfolds = 5, nlambda = 10),
  control_inference = controlInf(vars_selection = TRUE),
  verbose = TRUE
)
```
```{r mi-glm-scad-wynik}
cbind(est7_glm_sel$output,est7_glm_sel$confidence_interval)
```
```{r mi-glm-scad-summary}
summary(est7_glm_sel)
```
Porównanie estymatorów dla masowej imputacji

```{r mi-posumowanie}
mi_summary <- rbind(cbind(est5_glm$output, est5_glm$confidence_interval),
                     cbind(est5_glm_biom$output, est5_glm_biom$confidence_interval),
                     cbind(est6_glm_nn$output, est6_glm_nn$confidence_interval),
                     cbind(est6_glm_pmm$output, est6_glm_pmm$confidence_interval),
                     cbind(est7_glm_sel$output, est7_glm_sel$confidence_interval))
rownames(mi_summary) <- NULL
mi_summary$est <- c("mi (lm)", "mi (glm)", "mi (nn)", "mi (pmm)", "mi (glm, scad)")
mi_summary
```

# Estymator DR

## Różne estymatory DR

```{r dr-glm-binom}
est8_dr1 <- nonprob(
  selection = ~ woj + sektor + pkd + klasa,
  outcome = jedna_zmiana ~ woj + sektor + pkd + klasa,
  svydesign = popyt_svy,
  data = cbop,
  method_selection = "logit",
  method_outcome = "glm",
  family_outcome = "binomial"
)

cbind(est8_dr1$output,est8_dr1$confidence_interval)
```
```{r dr-glm-binom-summary}
summary(est8_dr1)
```

```{r dr-glm-binom-struktura}
str(est8_dr1,1)
```

```{r dr-glm-calib}
est8_dr2 <- nonprob(
  selection = ~ woj + sektor + pkd + klasa,
  outcome = jedna_zmiana ~ woj + sektor + pkd + klasa,
  svydesign = popyt_svy,
  data = cbop,
  method_selection = "logit",
  method_outcome = "glm",
  family_outcome = "binomial",
  control_selection = controlSel(h = 1, est_method_sel = "gee")
)

cbind(est8_dr2$output,est8_dr2$confidence_interval)
```
Estymacja wariancji metodą bootstrap

```{r dr-glm-bootstrap}
set.seed(2023-12-8)
est8_dr3 <- nonprob(
  selection = ~ woj + sektor + pkd + klasa,
  outcome = jedna_zmiana ~ woj + sektor + pkd + klasa,
  svydesign = popyt_svy,
  data = cbop,
  method_selection = "logit",
  method_outcome = "glm",
  family_outcome = "binomial",
  control_inference = controlInf(var_method = "bootstrap", num_boot = 50),
  verbose = TRUE
)

cbind(est8_dr3$output,est8_dr3$confidence_interval)
```

## Dobór zmiennych

```{r dr-glm-scad}
set.seed(2023-12-8)
est9_dr1 <- nonprob(
  selection = ~ woj + sektor + pkd + klasa,
  outcome = jedna_zmiana ~ woj + sektor + pkd + klasa,
  svydesign = popyt_svy,
  data = cbop,
  method_selection = "logit",
  method_outcome = "glm",
  family_outcome = "binomial",
  control_selection = controlSel(nfolds = 5, nlambda = 10),
  control_outcome = controlOut(nfolds = 5, nlambda = 10),
  control_inference = controlInf(vars_selection = TRUE),
  verbose = TRUE
)

cbind(est9_dr1$output,est9_dr1$confidence_interval)
```


## Dobór zmiennych + minimalizacja obciążenia

```{r dr-glm-scad-bias-min}
set.seed(2023-12-8)
est9_dr2 <- nonprob(
  selection = ~ woj + sektor + pkd + klasa,
  outcome = jedna_zmiana ~ woj + sektor + pkd + klasa,
  svydesign = popyt_svy,
  data = cbop,
  method_selection = "logit",
  method_outcome = "glm",
  family_outcome = "binomial",
  control_selection = controlSel(nfolds = 5, nlambda = 10),
  control_outcome = controlOut(nfolds = 5, nlambda = 10),
  control_inference = controlInf(vars_selection = TRUE, bias_correction = TRUE),
  verbose = TRUE
)

cbind(est9_dr2$output,est9_dr2$confidence_interval)
```


Porównanie szacunków

```{r dr-podsumowanie}
dr_summary <- rbind(cbind(est8_dr1$output, est8_dr1$confidence_interval),
                    cbind(est8_dr2$output, est8_dr2$confidence_interval),
                    cbind(est8_dr3$output, est8_dr3$confidence_interval),
                    cbind(est9_dr1$output, est9_dr1$confidence_interval),
                    cbind(est9_dr2$output, est9_dr2$confidence_interval))
rownames(dr_summary) <- NULL
dr_summary$est <- c("dr (ipw)", "dr (ipw cal)", "dr (ipw, boot)", "dr (scad)", "dr (scad, min)")
dr_summary
```

# Porównanie szacunków

```{r wykres-na-koniec}
wyniki <- rbind(ipw_summary, mi_summary, dr_summary)

ggplot(data = wyniki, aes(y = est, x = mean, xmin = lower_bound, xmax = upper_bound)) +
  geom_point() +
  geom_vline(xintercept = mean(cbop$jedna_zmiana), linetype = "dotted", color = "red") + 
  geom_errorbar() +
  labs(x = "Oszacowanie punktowe i przedziałowe", y = "Estymator")
```

